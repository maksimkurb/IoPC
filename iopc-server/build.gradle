/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id "org.springframework.boot" version "2.4.0"
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'ru.cubly.iopc'
version = '0.0.1-SNAPSHOT'

processResources {
    filesMatching('application.properties') {
        expand(project.properties)
    }
}
ext {
    set('springCloudVersion', "2020.0.0")
}


dependencies {
    implementation project(':iopc-native')
    implementation 'com.1stleg:jnativehook:2.1.0'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.integration:spring-integration-mqtt:5.4.4'
    implementation 'org.springframework.integration:spring-integration-websocket:5.4.4'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.jmdns:jmdns:3.5.1'
    implementation 'org.reflections:reflections:0.9.12'

    implementation 'com.github.oshi:oshi-core:5.7.2' // TODO: use for SysInfo module
    implementation 'net.java.dev.jna:jna:5.8.0'

    compile 'org.slf4j:slf4j-api'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.3'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
    compileOnly 'org.projectlombok:lombok:1.18.12'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
